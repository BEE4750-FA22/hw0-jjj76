---
title: "BEE 4750/5750 Homework 0"
author: "Jaden Jeswald (jjj76)"
date: `j import Dates; Dates.Date(Dates.now())`
weave_options:
  term: true
  results: tex
  cache: off
---

<!-- This setups the environment and installs packages, but doesn't appear in the generated document -->
<!-- You shouldn't need to modify this -->
```julia; echo = false; results = "hidden"
using Pkg
Pkg.activate(".")
Pkg.instantiate()
```

# Problem 1

## Problem 1.1
```julia
function square_number(x)
  output = x*x
  return output
end
```
## Problem 1.2
We can see that $5^2$ = $`j square_number(5)`$

## Problem 1.3
```julia
using Plots
plot(square_number, -10, 10, title = "Square Number", xlabel = "X", ylabel = "X^2")
```

# Problem 2
## Problem 2.1
'If the square root of x is less than a, then x/a is less than x/sqrt(x) or x/a is less than sqrt(x).'
'If the square root of x is greater than a, then x/a is greater than x/sqrt(x) or x/a is greater than sqrt(x).'
'For each, sqrt(x) is larger than either x/a or a and smaller than the other. '

## Problem 2.2
```julia
x = 2;
old_a = x;
new_a = 1;
error_margin = 1e-6
while abs(old_a - new_a) > error_margin
    global old_a = new_a;
    global new_a = ((x/old_a)+old_a)/2
end
square_root = new_a;
```
print('This gives us sqrt(2) = ', square_root)
# Problem 3
## Problem 3.1
```julia
vector = rand(20)
vector
```
## Problem 3.2
```julia
function mean(vector)
    k = 0
  for i in 1:length(vector)
        k = k + vector[i]
  end
  mean = k/i 
  return mean
end

rand_mean = mean(vector)

function demean(vector)
  mean_vector = mean(vector)
  demean_vector = zeros(length(vector))
  for i in 1:length(vector)
    demean_vector[i] vector[i] - mean_vector
  end
  return demean_vector
end

demean_rand = demean(vector)
```
## Problem 3.3
```julia
vector_10 = [0,0,1,1,1,1,1,1,0,0]
```
## Problem 3.4
``` julia
matrix5 = rand(5, 5)

matrix5_demean = zeros(5,5);

for i in 1:5
    matrix5_demean[1:5.i] = demean(matrix5[1:5,i])
end

matrix5_demean
```
# Problem 4
## Problem 4.1
```julia
import Pkg;
Pkg.activate(".")
Pkg.instantiate()
using Distributions;
a = 0.4;
q = 2;
b = 0.42;
mu = log(0.03);
sigma = 0.005;
T = 100;
ln_dist = LogNormal(mu, sigma);
yt = rand(ln_dist, 100);
```

## Problem 4.2
``` julia
function phosphorous_dynamics (a, yt, b, q, T, X0)
  X = zeros(T);
  X[1] = X0;
  for i in 1: T-1
    X[i+1} = X[i] + a + yt[i] + X[i]^q/(1+X[i]^q) - b*X[i] 
  end
return X 
end
```
## Problem 4.3
``` julia
X0 = 0;
phosphorous_levels = phosphorous_dynamics(a,yt,b,q,T,X0);
years = 1:T;
plot(years, phosphorous_levels, label = "Phosphorous Levels", xlabel = "year", yt)
```
# References
Worked with: Akanksha Srivastava 

Plot: https://docs.juliaplots.org/latest/tutorial/ 
https://viveks.me/environmental-systems-analysis/tutorials/julia-plots/#some_resources
 https://stackoverflow.com/questions/59680697/not-defined-
variable-in-a-while-loop-in-julia
